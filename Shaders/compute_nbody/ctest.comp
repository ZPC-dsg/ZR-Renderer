#version 430

#define NUM_PARTICLES 24 * 1024

struct Particle
{
    vec4 pos;
    vec4 color;
};

layout (std430, binding = 0) buffer ParticleBuffer {
    Particle particles[];
};

layout (local_size_x = 128) in;

layout (std140, binding = 1) uniform UBO 
{
	float deltaT;
	int particleCount;
} ubo;

uniform float GRAVITY;
uniform float POWER;
uniform float SOFTEN;

void main() {
    uint id = gl_GlobalInvocationID.x;
    // 更新粒子位置逻辑
    particles[id].pos = vec4(normalize(particles[id].pos.xyz), 1.0); 
    particles[id].color = vec4(0.0, float(id) / float(NUM_PARTICLES), 0.0, 1.0);
}